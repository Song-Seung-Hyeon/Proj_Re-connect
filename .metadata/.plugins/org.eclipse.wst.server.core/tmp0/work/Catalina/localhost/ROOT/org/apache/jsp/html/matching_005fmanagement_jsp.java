/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-12-20 05:54:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.text.SimpleDateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;

public final class matching_005fmanagement_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.time.Period");
    _jspx_imports_classes.add("java.time.LocalDate");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

request.setCharacterEncoding("utf-8");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

String url = "jdbc:mysql://192.168.0.71:3306/recycle";
String user = "recycle";
String password = "1234";

      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<title>manager DASH매칭 관리 | 마음을 다시 연결하는 결혼 정보 플랫폼 DASH</title>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("<meta name=\"keyworeds\"\n");
      out.write("	content=\"결혼, wedding, 결혼정보업체, DASH, Re:Connect, 듀오, 가연,\" />\n");
      out.write("<meta name=\"description\"\n");
      out.write("	content=\"안녕하세요, 마음을 다시 연결하는 결혼 정보 플랫폼 DASH 입니다.\" />\n");
      out.write("<link rel=\"icon\" href=\"../favicon.png\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../CSS/matching_management.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../CSS/footer_style.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../CSS/reset.css\" />\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<header class=\"account_header\">\n");
      out.write("		<div class=\"header_btn\">\n");
      out.write("			<div class=\"message_badge\">\n");
      out.write("				<button type=\"button\" class=\"btn_messenger\" onclick=\"\">메신저</button>\n");
      out.write("				<span class=\"push_num\" style=\"display: none\">0</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"alarm_badge\">\n");
      out.write("				<button type=\"button\" class=\"btn_alarm\" onclick=\"\">알림</button>\n");
      out.write("				<span class=\"push_num\" style=\"display: none\">0</span>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"member\">\n");
      out.write("			<button type=\"button\" class=\"btn_member\">\n");
      out.write("				<div class=\"user_photo\">\n");
      out.write("					<figure class=\"user_img\">\n");
      out.write("						<img src=\"../images/Song.jpg\" alt=\"user_img\" />\n");
      out.write("					</figure>\n");
      out.write("				</div>\n");
      out.write("			</button>\n");
      out.write("\n");
      out.write("			<div class=\"layer_member\">\n");
      out.write("				<ul>\n");
      out.write("					<li><img src=\"../images/Song.jpg\" alt=\"user_img\" /><span>송승현</span>\n");
      out.write("					</li>\n");
      out.write("					<li><a href=\"account.jsp\"><span>개인정보 수정</span> <iconify-icon\n");
      out.write("								icon=\"la:edit-solid\" width=\"30\"></iconify-icon></a></li>\n");
      out.write("					<li><a href=\"../jsp/logout.jsp\"><span>로그아웃</span> <iconify-icon\n");
      out.write("								icon=\"material-symbols:logout\" width=\"25\"></iconify-icon></a></li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</header>\n");
      out.write("\n");
      out.write("	<div class=\"nav\">\n");
      out.write("		<a href=\"../index.jsp\" id=\"logo2\"> <img src=\"../images/logo.svg\"\n");
      out.write("			alt=\"logo\" />\n");
      out.write("		</a>\n");
      out.write("		<ul class=\"gnb\">\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"account_manager.jsp\"\n");
      out.write("				class=\"menu-btn\">마이페이지</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"post_management.jsp\"\n");
      out.write("				class=\"menu-btn\">게시물 관리</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"user_management.jsp\"\n");
      out.write("				class=\"menu-btn\">회원관리</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"user_estimate_manager.jsp\"\n");
      out.write("				class=\"menu-btn\">상담예약 확인</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"matching_management.jsp\"\n");
      out.write("				class=\"menu-btn\">DASH 매칭</a></li>\n");
      out.write("		</ul>\n");
      out.write("		<button type=\"button\" class=\"nav-icon\">\n");
      out.write("			<iconify-icon icon=\"ph:list-fill\"></iconify-icon>\n");
      out.write("		</button>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<main>\n");
      out.write("		<div class=\"container\">\n");
      out.write("			<div class=\"container_main\">\n");
      out.write("				<div class=\"content\">\n");
      out.write("					<h1>DASH매칭</h1>\n");
      out.write("\n");
      out.write("					<div>\n");
      out.write("						<p>월별 매칭표</p>\n");
      out.write("						<canvas id=\"myChart\"></canvas>\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("					<div class=\"authority\">\n");
      out.write("						<div class=\"search-box\">\n");
      out.write("\n");
      out.write("							<select name=\"user_search\" class=\"user_search\">\n");
      out.write("								<option value=\"성함\">성함</option>\n");
      out.write("								<option value=\"ID\">ID</option>\n");
      out.write("								<!-- <option value=\"사용권한\">사용권한</option> -->\n");
      out.write("							</select> <input type=\"search\">\n");
      out.write("							<button type=\"button\" class=\"search-btn\">조회</button>\n");
      out.write("							<button type=\"button\" onclick=\"openModal('modal1')\"\n");
      out.write("								class=\"add_btn\">등록</button>\n");
      out.write("						</div>\n");
      out.write("\n");
      out.write("						<div id=\"modal1\" class=\"modal\">\n");
      out.write("							<div class=\"modal-content\">\n");
      out.write("								<h3 class=\"modal-heder\">커플 등록</h3>\n");
      out.write("								<div class=\"modal-text\">\n");
      out.write("									<form action=\"#\" method=\"post\" id=\"add_administrator\"\n");
      out.write("										enctype=\"multipart/form-data\">\n");
      out.write("										<div class=\"search-box\">\n");
      out.write("\n");
      out.write("											<select name=\"user_search\" class=\"user_search\">\n");
      out.write("												<option value=\"성함\">성함</option>\n");
      out.write("												<option value=\"ID\">ID</option>\n");
      out.write("											</select> <input type=\"search\">\n");
      out.write("											<button type=\"button\" class=\"search-btn\">조회</button>\n");
      out.write("										</div>\n");
      out.write("										<div class=\"btn_box\">\n");
      out.write("											<button type=\"submit\" id=\"submit-authority\"\n");
      out.write("												class=\"modal_btn active_btn\">저장</button>\n");
      out.write("											<button type=\"button\" onclick=\"closeModal('modal1')\"\n");
      out.write("												class=\"modal_btn\">닫기</button>\n");
      out.write("										</div>\n");
      out.write("									</form>\n");
      out.write("								</div>\n");
      out.write("								<button tpye=\"button\" onclick=\"closeModal('modal1')\"\n");
      out.write("									class=\"close_btn\">\n");
      out.write("									<iconify-icon icon=\"ph:x-light\" width=\"30px\"></iconify-icon>\n");
      out.write("								</button>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<!-- user1 -->\n");
      out.write("						");

							try {
								Class.forName("com.mysql.cj.jdbc.Driver");
								Connection conn = DriverManager.getConnection(url, user, password);

								String likeFromQuery = "SELECT * FROM matches;";
								PreparedStatement preparedStatement = conn.prepareStatement(likeFromQuery);
								ResultSet resultSet = preparedStatement.executeQuery();

								SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

								while (resultSet.next()) {
									String user1_id = resultSet.getString("user1_id");
									String user2_id = resultSet.getString("user2_id");
									String matched_date = resultSet.getString("matched_date");
									String manager_id = resultSet.getString("manager_id");
									
									// user1
									String userDetails1Query = "SELECT ul.*, ud.*, " 
											+ "GROUP_CONCAT(DISTINCT h.hobby_name) AS hobbies, "
									        + "GROUP_CONCAT(DISTINCT p.personality_name) AS personalities, "
									        + "GROUP_CONCAT(DISTINCT mv.values_name) AS marriage_values, " 
									        + "GROUP_CONCAT(DISTINCT m.membership_name) AS membership "
									        + "FROM user_list ul "
									        + "LEFT JOIN user_detail ud ON ul.user_uid = ud.user_uid "
									        + "LEFT JOIN user_hobbies uh ON ul.user_uid = uh.user_id "
									        + "LEFT JOIN hobbies h ON uh.hobby_id = h.hobby_id "
									        + "LEFT JOIN user_personality up ON ul.user_uid = up.user_id "
									        + "LEFT JOIN personalities p ON up.personality_id = p.personality_id "
									        + "LEFT JOIN user_marriage_values umv ON ul.user_uid = umv.user_id "
									        + "LEFT JOIN marriage_values mv ON umv.values_id = mv.values_id "  
									        + "LEFT JOIN membership_info mi ON ul.user_uid = mi.user_uid "
									        + "LEFT JOIN membership m ON mi.membership_uid = m.membership_uid "
									        + "WHERE ul.user_uid = ? " 
									        + "GROUP BY ul.user_uid";
									PreparedStatement userDetails1Statement = conn.prepareStatement(userDetails1Query);
									userDetails1Statement.setString(1, user1_id);
									ResultSet userDetails1Result = userDetails1Statement.executeQuery();
									
									

									if (userDetails1Result.next()) {
										
								// user1의 정보
								String user_uid1 = userDetails1Result.getString("user_uid");
								String user_name1 = userDetails1Result.getString("user_name");
								String user_id1 = userDetails1Result.getString("user_id");
								String user_gender1 = userDetails1Result.getString("user_gender");
								if(user_gender1.equals("1")){user_gender1="여자";}else{user_gender1="남자";}
								String user_phone1 = userDetails1Result.getString("user_phone");
								String user_birth1 = userDetails1Result.getString("user_birth");
								String user_email1 = userDetails1Result.getString("user_email");
								String user_conutry1 = userDetails1Result.getString("user_country");
								String reg_date1 = userDetails1Result.getString("reg_date");
								String membership_uid1 = userDetails1Result.getString("membership");
								String user_introduce1 = userDetails1Result.getString("user_introduce");
								
								String user_height1 = userDetails1Result.getString("user_height");
								String user_career1 = userDetails1Result.getString("user_career");
								String user_education1 = userDetails1Result.getString("user_education");
								String user_body1 = userDetails1Result.getString("user_body");
								String user_salary1 = userDetails1Result.getString("user_salary");
								if (user_salary1.equals("-2000")) {
									user_salary1 = "2000만원 미만";
								} else if (user_salary1.equals("-3000")) {
									user_salary1 = "2천만원 이상 - 3천만원 미만";
								} else if (user_salary1.equals("-4000")) {
									user_salary1 = "3천만원 이상 - 4천만원 미만";
								} else if (user_salary1.equals("-5000")) {
									user_salary1 = "4천만원 이상 - 5천만원 미만";
								} else if (user_salary1.equals("-6000")) {
									user_salary1 = "5천만원 이상 - 6천만원 미만";
								} else if (user_salary1.equals("-7000")) {
									user_salary1 = "6천만원 이상 - 7천만원 미만";
								} else if (user_salary1.equals("-8000")) {
									user_salary1 = "7천만원 이상 - 8천만원 미만";
								} else if (user_salary1.equals("-9000")) {
									user_salary1 = "8천만원 이상 - 9천만원 미만";
								} else if (user_salary1.equals("-10000")) {
									user_salary1 = "9천만원 이상 - 1억 미만";
								} else if (user_salary1.equals("-10000-20000")) {
									user_salary1 = "1억 이상 - 2억 미만";
								} else if (user_salary1.equals("-20000-30000")) {
									user_salary1 = "2억 이상 - 3억 미만";
								} else if (user_salary1.equals("-30000-40000")) {
									user_salary1 = "3억 이상 - 4억 미만";
								} else if (user_salary1.equals("-40000-50000")) {
									user_salary1 = "4억 이상 - 5억 미만";
								} else if (user_salary1.equals("50000-")) {
									user_salary1 = "5억 이상";
								}
								String user_marital1 = userDetails1Result.getString("user_marital");
								if(user_marital1.equals("1")){user_marital1="Yes";}else{user_marital1="No";}
								String user_children1 = userDetails1Result.getString("user_children");
								if(user_children1.equals("1")){user_children1="Yes";}else{user_children1="No";}
								String user_children_count1 = userDetails1Result.getString("user_children_count");
								String user_hobbies1 = userDetails1Result.getString("hobbies");
								String user_persnality1 = userDetails1Result.getString("personalities");
								String user_alcohol1 = userDetails1Result.getString("user_alcohol");
								if(user_alcohol1.equals("1")){user_alcohol1="Yes";}else{user_alcohol1="No";}
								String user_smoking1 = userDetails1Result.getString("user_smoking");
								if(user_smoking1.equals("1")){user_smoking1="Yes";}else{user_smoking1="No";}
								String user_blood1 = userDetails1Result.getString("user_blood");
								String user_marriage_values1 = userDetails1Result.getString("marriage_values");
								
								String photo_url1 = userDetails1Result.getString("photo_url");
								String imageName1 = (photo_url1 != null) ? new File(photo_url1).getName() : "Default_image.JPG";

							
      out.write("\n");
      out.write("						<div id=\"modal");
      out.print(user_uid1);
      out.write("\" class=\"modal\">\n");
      out.write("							<div class=\"modal-content\">\n");
      out.write("								<h3 class=\"modal-heder\">회원관리</h3>\n");
      out.write("								<div class=\"modal-text\">\n");
      out.write("									<form action=\"#\" method=\"post\" id=\"add_administrator\"\n");
      out.write("										enctype=\"multipart/form-data\">\n");
      out.write("										<div class=\"add_info\">\n");
      out.write("											<table class=\"info\">\n");
      out.write("												<tr>\n");
      out.write("													<td>이름</td>\n");
      out.write("													<td>");
      out.print(user_name1 );
      out.write("</td>\n");
      out.write("													<td>ID</td>\n");
      out.write("													<td>");
      out.print(user_id1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>성별</td>\n");
      out.write("													<td>");
      out.print(user_gender1 );
      out.write("</td>\n");
      out.write("													<td>연락처</td>\n");
      out.write("													<td>");
      out.print(user_phone1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>생년월일</td>\n");
      out.write("													<td>");
      out.print(user_birth1 );
      out.write("</td>\n");
      out.write("													<td>이메일</td>\n");
      out.write("													<td>");
      out.print(user_email1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>지역</td>\n");
      out.write("													<td>");
      out.print(user_conutry1 );
      out.write("</td>\n");
      out.write("													<td>가입일</td>\n");
      out.write("													<td>");
      out.print(reg_date1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>등급</td>\n");
      out.write("													<td>");
      out.print(membership_uid1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td colspan=\"4\">프로필</td>											\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>키</td>\n");
      out.write("													<td>");
      out.print(user_height1 );
      out.write("</td>\n");
      out.write("													<td>직업</td>\n");
      out.write("													<td>");
      out.print(user_career1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>학력</td>\n");
      out.write("													<td>");
      out.print(user_education1 );
      out.write("</td>\n");
      out.write("													<td>체형</td>\n");
      out.write("													<td>");
      out.print(user_body1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>연봉</td>\n");
      out.write("													<td>");
      out.print(user_salary1 );
      out.write("</td>\n");
      out.write("													<td>결혼여부</td>\n");
      out.write("													<td>");
      out.print(user_marital1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>자녀여부</td>\n");
      out.write("													<td>");
      out.print(user_children1 );
      out.write("</td>\n");
      out.write("													<td>자녀 수</td>\n");
      out.write("													<td>");
      out.print(user_children_count1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>관심사</td>\n");
      out.write("													<td>");
      out.print(user_hobbies1 );
      out.write("</td>\n");
      out.write("													<td>성격</td>\n");
      out.write("													<td>");
      out.print(user_persnality1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>음주</td>\n");
      out.write("													<td>");
      out.print(user_alcohol1 );
      out.write("</td>\n");
      out.write("													<td>흡연</td>\n");
      out.write("													<td>");
      out.print(user_smoking1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>결혼가치관</td>\n");
      out.write("													<td>");
      out.print(user_marriage_values1 );
      out.write("</td>\n");
      out.write("													<td>혈액형</td>\n");
      out.write("													<td>");
      out.print(user_blood1 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("											</table>\n");
      out.write("										</div>\n");
      out.write("										<div class=\"btn_box\">\n");
      out.write("											<button type=\"submit\" id=\"submit-authority\"\n");
      out.write("												class=\"modal_btn active_btn\">수정</button>\n");
      out.write("											<button type=\"button\" onclick=\"closeModal('modal");
      out.print(user_uid1);
      out.write("')\"\n");
      out.write("												class=\"modal_btn\">닫기</button>\n");
      out.write("										</div>\n");
      out.write("									</form>\n");
      out.write("								</div>\n");
      out.write("								<button tpye=\"button\" onclick=\"closeModal('modal");
      out.print(user_uid1);
      out.write("')\"\n");
      out.write("									class=\"close_btn\">\n");
      out.write("									<iconify-icon icon=\"ph:x-light\" width=\"30px\"></iconify-icon>\n");
      out.write("								</button>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("							");

							}
							// Close the result set and statement for user details query
							userDetails1Result.close();
							userDetails1Statement.close();
							}

							// Close resources for the main query
							resultSet.close();
							preparedStatement.close();
							conn.close();
							} catch (Exception e) {
							out.println("Error: " + e.getMessage());
							}
							
      out.write("\n");
      out.write("							\n");
      out.write("							<!-- user2 -->\n");
      out.write("							");

							try {
								Class.forName("com.mysql.cj.jdbc.Driver");
								Connection conn = DriverManager.getConnection(url, user, password);

								String likeFromQuery = "SELECT * FROM matches;";
								PreparedStatement preparedStatement = conn.prepareStatement(likeFromQuery);
								ResultSet resultSet = preparedStatement.executeQuery();

								SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

								while (resultSet.next()) {
									String user1_id = resultSet.getString("user1_id");
									String user2_id = resultSet.getString("user2_id");
									String matched_date = resultSet.getString("matched_date");
									String manager_id = resultSet.getString("manager_id");
									
									// user2
									String userDetails2Query = "SELECT ul.*, ud.*, " 
											+ "GROUP_CONCAT(DISTINCT h.hobby_name) AS hobbies, "
									        + "GROUP_CONCAT(DISTINCT p.personality_name) AS personalities, "
									        + "GROUP_CONCAT(DISTINCT mv.values_name) AS marriage_values, " 
									        + "GROUP_CONCAT(DISTINCT m.membership_name) AS membership "
									        + "FROM user_list ul "
									        + "LEFT JOIN user_detail ud ON ul.user_uid = ud.user_uid "
									        + "LEFT JOIN user_hobbies uh ON ul.user_uid = uh.user_id "
									        + "LEFT JOIN hobbies h ON uh.hobby_id = h.hobby_id "
									        + "LEFT JOIN user_personality up ON ul.user_uid = up.user_id "
									        + "LEFT JOIN personalities p ON up.personality_id = p.personality_id "
									        + "LEFT JOIN user_marriage_values umv ON ul.user_uid = umv.user_id "
									        + "LEFT JOIN marriage_values mv ON umv.values_id = mv.values_id "  
									        + "LEFT JOIN membership_info mi ON ul.user_uid = mi.user_uid "
									        + "LEFT JOIN membership m ON mi.membership_uid = m.membership_uid "
									        + "WHERE ul.user_uid = ? " 
									        + "GROUP BY ul.user_uid";
									PreparedStatement userDetails2Statement = conn.prepareStatement(userDetails2Query);
									userDetails2Statement.setString(1, user2_id);
									ResultSet userDetails2Result = userDetails2Statement.executeQuery();

									if (userDetails2Result.next()) {

								// user2의 정보
								String user_uid2 = userDetails2Result.getString("user_uid");
								String user_name2 = userDetails2Result.getString("user_name");
								String user_id2 = userDetails2Result.getString("user_id");
								String user_gender2 = userDetails2Result.getString("user_gender");
								if(user_gender2.equals("1")){user_gender2="여자";}else{user_gender2="남자";}
								String user_phone2 = userDetails2Result.getString("user_phone");
								String user_birth2 = userDetails2Result.getString("user_birth");
								String user_email2 = userDetails2Result.getString("user_email");
								String user_conutry2 = userDetails2Result.getString("user_country");
								String reg_date2 = userDetails2Result.getString("reg_date");
								String membership_uid2 = userDetails2Result.getString("membership");
								String user_introduce2 = userDetails2Result.getString("user_introduce");
								
								String user_height2 = userDetails2Result.getString("user_height");
								String user_career2 = userDetails2Result.getString("user_career");
								String user_education2 = userDetails2Result.getString("user_education");
								String user_body2 = userDetails2Result.getString("user_body");
								String user_salary2 = userDetails2Result.getString("user_salary");
								if (user_salary2.equals("-2000")) {
									user_salary2 = "2000만원 미만";
								} else if (user_salary2.equals("-3000")) {
									user_salary2 = "2천만원 이상 - 3천만원 미만";
								} else if (user_salary2.equals("-4000")) {
									user_salary2 = "3천만원 이상 - 4천만원 미만";
								} else if (user_salary2.equals("-5000")) {
									user_salary2 = "4천만원 이상 - 5천만원 미만";
								} else if (user_salary2.equals("-6000")) {
									user_salary2 = "5천만원 이상 - 6천만원 미만";
								} else if (user_salary2.equals("-7000")) {
									user_salary2 = "6천만원 이상 - 7천만원 미만";
								} else if (user_salary2.equals("-8000")) {
									user_salary2 = "7천만원 이상 - 8천만원 미만";
								} else if (user_salary2.equals("-9000")) {
									user_salary2 = "8천만원 이상 - 9천만원 미만";
								} else if (user_salary2.equals("-10000")) {
									user_salary2 = "9천만원 이상 - 1억 미만";
								} else if (user_salary2.equals("-10000-20000")) {
									user_salary2 = "1억 이상 - 2억 미만";
								} else if (user_salary2.equals("-20000-30000")) {
									user_salary2 = "2억 이상 - 3억 미만";
								} else if (user_salary2.equals("-30000-40000")) {
									user_salary2 = "3억 이상 - 4억 미만";
								} else if (user_salary2.equals("-40000-50000")) {
									user_salary2 = "4억 이상 - 5억 미만";
								} else if (user_salary2.equals("50000-")) {
									user_salary2 = "5억 이상";
								}
								String user_marital2 = userDetails2Result.getString("user_marital");
								if(user_marital2.equals("1")){user_marital2="Yes";}else{user_marital2="No";}
								String user_children2 = userDetails2Result.getString("user_children");
								if(user_children2.equals("1")){user_children2="Yes";}else{user_children2="No";}
								String user_children_count2 = userDetails2Result.getString("user_children_count");
								String user_hobbies2 = userDetails2Result.getString("hobbies");
								String user_persnality2 = userDetails2Result.getString("personalities");
								String user_alcohol2 = userDetails2Result.getString("user_alcohol");
								if(user_alcohol2.equals("1")){user_alcohol2="Yes";}else{user_alcohol2="No";}
								String user_smoking2 = userDetails2Result.getString("user_smoking");
								if(user_smoking2.equals("1")){user_smoking2="Yes";}else{user_smoking2="No";}
								String user_blood2 = userDetails2Result.getString("user_blood");
								String user_marriage_values2 = userDetails2Result.getString("marriage_values");
								
								String photo_url2 = userDetails2Result.getString("photo_url");
								String imageName2 = (photo_url2 != null) ? new File(photo_url2).getName() : "Default_image.JPG";
							
      out.write("\n");
      out.write("						<div id=\"modal");
      out.print(user_uid2);
      out.write("\" class=\"modal\">\n");
      out.write("							<div class=\"modal-content\">\n");
      out.write("								<h3 class=\"modal-heder\">회원관리</h3>\n");
      out.write("								<div class=\"modal-text\">\n");
      out.write("									<form action=\"#\" method=\"post\" id=\"add_administrator\"\n");
      out.write("										enctype=\"multipart/form-data\">\n");
      out.write("										<div class=\"add_info\">\n");
      out.write("											<table class=\"info\">\n");
      out.write("												<tr>\n");
      out.write("													<td>이름</td>\n");
      out.write("													<td>");
      out.print(user_name2 );
      out.write("</td>\n");
      out.write("													<td>ID</td>\n");
      out.write("													<td>");
      out.print(user_id2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>성별</td>\n");
      out.write("													<td>");
      out.print(user_gender2 );
      out.write("</td>\n");
      out.write("													<td>연락처</td>\n");
      out.write("													<td>");
      out.print(user_phone2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>생년월일</td>\n");
      out.write("													<td>");
      out.print(user_birth2 );
      out.write("</td>\n");
      out.write("													<td>이메일</td>\n");
      out.write("													<td>");
      out.print(user_email2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>지역</td>\n");
      out.write("													<td>");
      out.print(user_conutry2 );
      out.write("</td>\n");
      out.write("													<td>가입일</td>\n");
      out.write("													<td>");
      out.print(reg_date2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>등급</td>\n");
      out.write("													<td>");
      out.print(membership_uid2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td colspan=\"4\">프로필</td>											\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>키</td>\n");
      out.write("													<td>");
      out.print(user_height2 );
      out.write("</td>\n");
      out.write("													<td>직업</td>\n");
      out.write("													<td>");
      out.print(user_career2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>학력</td>\n");
      out.write("													<td>");
      out.print(user_education2 );
      out.write("</td>\n");
      out.write("													<td>체형</td>\n");
      out.write("													<td>");
      out.print(user_body2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>연봉</td>\n");
      out.write("													<td>");
      out.print(user_salary2 );
      out.write("</td>\n");
      out.write("													<td>결혼여부</td>\n");
      out.write("													<td>");
      out.print(user_marital2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>자녀여부</td>\n");
      out.write("													<td>");
      out.print(user_children2 );
      out.write("</td>\n");
      out.write("													<td>자녀 수</td>\n");
      out.write("													<td>");
      out.print(user_children_count2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>관심사</td>\n");
      out.write("													<td>");
      out.print(user_hobbies2 );
      out.write("</td>\n");
      out.write("													<td>성격</td>\n");
      out.write("													<td>");
      out.print(user_persnality2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>음주</td>\n");
      out.write("													<td>");
      out.print(user_alcohol2 );
      out.write("</td>\n");
      out.write("													<td>흡연</td>\n");
      out.write("													<td>");
      out.print(user_smoking2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("												<tr>\n");
      out.write("													<td>결혼가치관</td>\n");
      out.write("													<td>");
      out.print(user_marriage_values2 );
      out.write("</td>\n");
      out.write("													<td>혈액형</td>\n");
      out.write("													<td>");
      out.print(user_blood2 );
      out.write("</td>\n");
      out.write("												</tr>\n");
      out.write("											</table>\n");
      out.write("										</div>\n");
      out.write("										<div class=\"btn_box\">\n");
      out.write("											<button type=\"submit\" id=\"submit-authority\"\n");
      out.write("												class=\"modal_btn active_btn\">수정</button>\n");
      out.write("											<button type=\"button\" onclick=\"closeModal('modal");
      out.print(user_uid2);
      out.write("')\"\n");
      out.write("												class=\"modal_btn\">닫기</button>\n");
      out.write("										</div>\n");
      out.write("									</form>\n");
      out.write("								</div>\n");
      out.write("								<button tpye=\"button\" onclick=\"closeModal('modal");
      out.print(user_uid2);
      out.write("')\"\n");
      out.write("									class=\"close_btn\">\n");
      out.write("									<iconify-icon icon=\"ph:x-light\" width=\"30px\"></iconify-icon>\n");
      out.write("								</button>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("							");

							}
							// Close the result set and statement for user details query
							userDetails2Result.close();
							userDetails2Statement.close();
							}

							// Close resources for the main query
							resultSet.close();
							preparedStatement.close();
							conn.close();
							} catch (Exception e) {
							out.println("Error: " + e.getMessage());
							}
							
      out.write("\n");
      out.write("							\n");
      out.write("						<div class=\"manber_list\">\n");
      out.write("							");

							try {
								Class.forName("com.mysql.cj.jdbc.Driver");
								Connection conn = DriverManager.getConnection(url, user, password);

								String likeFromQuery = "SELECT * FROM matches;";
								PreparedStatement preparedStatement = conn.prepareStatement(likeFromQuery);
								ResultSet resultSet = preparedStatement.executeQuery();

								SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

								while (resultSet.next()) {
									String user1_id = resultSet.getString("user1_id");
									String user2_id = resultSet.getString("user2_id");
									String matched_date = resultSet.getString("matched_date");
									String manager_id = resultSet.getString("manager_id");

									String userDetails1Query = "SELECT * FROM user_list WHERE user_uid=?";
									PreparedStatement userDetails1Statement = conn.prepareStatement(userDetails1Query);
									userDetails1Statement.setString(1, user1_id);
									ResultSet userDetails1Result = userDetails1Statement.executeQuery();

									String userDetails2Query = "SELECT * FROM user_list WHERE user_uid=?";
									PreparedStatement userDetails2Statement = conn.prepareStatement(userDetails2Query);
									userDetails2Statement.setString(1, user2_id);
									ResultSet userDetails2Result = userDetails2Statement.executeQuery();

									if (userDetails1Result.next() && userDetails2Result.next()) {
								// user1의 정보
								String user_name1 = userDetails1Result.getString("user_name");
								String user_uid1 = userDetails1Result.getString("user_uid");
								String user_introduce1 = userDetails1Result.getString("user_introduce");
								String photo_url1 = userDetails1Result.getString("photo_url");
								String imageName1 = (photo_url1 != null) ? new File(photo_url1).getName() : "Default_image.JPG";

								// user2의 정보
								String user_name2 = userDetails2Result.getString("user_name");
								String user_uid2 = userDetails2Result.getString("user_uid");
								String user_introduce2 = userDetails2Result.getString("user_introduce");
								String photo_url2 = userDetails2Result.getString("photo_url");
								String imageName2 = (photo_url2 != null) ? new File(photo_url2).getName() : "Default_image.JPG";
							
      out.write("\n");
      out.write("							<div>\n");
      out.write("								<p>1</p>\n");
      out.write("								<button onclick=\"correctionModal('modal");
      out.print(user_uid1);
      out.write("')\">\n");
      out.write("									<img src=\"");
      out.print(request.getContextPath());
      out.write("/images/");
      out.print(imageName1);
      out.write("\"\n");
      out.write("										alt=\"");
      out.print(user_name1);
      out.write('"');
      out.write('>');
      out.print(user_name1);
      out.write("</button>\n");
      out.write("								<div>\n");
      out.write("									<img src=\"../images/arrowheart.svg\" alt=\"arrowheart\">\n");
      out.write("								</div>\n");
      out.write("								<button onclick=\"correctionModal('modal");
      out.print(user_uid2);
      out.write("')\">\n");
      out.write("									<img src=\"");
      out.print(request.getContextPath());
      out.write("/images/");
      out.print(imageName2);
      out.write("\"\n");
      out.write("										alt=\"");
      out.print(user_name2);
      out.write('"');
      out.write('>');
      out.print(user_name2);
      out.write("</button>\n");
      out.write("								<button onclick=\"deleteBtn()\" style=\"color: red;\">탈퇴</button>\n");
      out.write("							</div>\n");
      out.write("							");

							}
							// Close the result set and statement for user details query
							userDetails1Result.close();
							userDetails2Result.close();
							userDetails1Statement.close();
							userDetails2Statement.close();
							}

							// Close resources for the main query
							resultSet.close();
							preparedStatement.close();
							conn.close();
							} catch (Exception e) {
							out.println("Error: " + e.getMessage());
							}
							
      out.write("\n");
      out.write("						</div>\n");
      out.write("\n");
      out.write("					</div>\n");
      out.write("\n");
      out.write("				</div>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</main>\n");
      out.write("	<!-- 아래 footer 하단 고정 -->\n");
      out.write("	<footer class=\"footer\">\n");
      out.write("		<div class=\"footer-content\">\n");
      out.write("			<h3>(주)Re:connect</h3>\n");
      out.write("			<span>대표 : Recycle</span> <span>사업자등록번호 : 999-99-99999</span> <span>주소\n");
      out.write("				: (34838)대전광역시 중구 중앙로121번길 20 (선화동 41) 2층</span> <span>Tel.042-222-2402</span>\n");
      out.write("			<ul class=\"footer-socials\">\n");
      out.write("				<li><a href=\"index_logout.jsp\"><img\n");
      out.write("						src=\"../images/ico_image.svg\" alt=\"ico_image\" /></a> <!-- 임시로 로그아웃 넣어 놨음 -->\n");
      out.write("				</li>\n");
      out.write("				<li><a href=\"account_manager.jsp\"><img\n");
      out.write("						src=\"../images/ico_instagram.svg\" alt=\"ico_instagram\" /></a> <!-- 임시로 커플매니저페이지 넣어 놨음 -->\n");
      out.write("				</li>\n");
      out.write("				<li><a href=\"admin_manager_management.jsp\"><img\n");
      out.write("						src=\"../images/ico_youtube.svg\" alt=\"ico_youtube\" /></a> <!-- 임시로 관리자페이지 넣어 놨음 -->\n");
      out.write("				</li>\n");
      out.write("			</ul>\n");
      out.write("			<div class=\"footer-menu\">\n");
      out.write("				<p>\n");
      out.write("					copyright &copy;2023 by <a href=\"../index.jsp\">Re:connect.</a> All\n");
      out.write("					pictures cannot be copied without permission.\n");
      out.write("				</p>\n");
      out.write("				<ul class=\"f-menu\">\n");
      out.write("					<li><a href=\"../index.jsp\">Home</a></li>\n");
      out.write("					<li><a href=\"dash.jsp\">About</a></li>\n");
      out.write("					<li><a href=\"estimate.jsp\">Contact</a></li>\n");
      out.write("					<li><a href=\"FAQ.jsp\">FAQ</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</footer>\n");
      out.write("	<script\n");
      out.write("		src=\"https://cdn.jsdelivr.net/npm/chart.js@4.3.3/dist/chart.umd.min.js\"></script>\n");
      out.write("	<script src=\"../script/matching_chart.js\"></script>\n");
      out.write("	<script src=\"../script/matching_management.js\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
