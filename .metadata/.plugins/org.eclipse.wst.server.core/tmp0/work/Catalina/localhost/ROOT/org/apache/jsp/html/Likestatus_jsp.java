/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.82
 * Generated at: 2023-12-20 05:53:53 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.html;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.sql.*;
import java.io.*;
import java.util.*;
import javax.servlet.*;
import javax.servlet.http.*;
import java.text.SimpleDateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;

public final class Likestatus_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.sql");
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("java.io");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.time.Period");
    _jspx_imports_classes.add("java.time.LocalDate");
    _jspx_imports_classes.add("java.time.format.DateTimeFormatter");
    _jspx_imports_classes.add("java.text.SimpleDateFormat");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");

request.setCharacterEncoding("utf-8");

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../jsp/user_list_component.jsp", out, false);
      out.write('\n');

String userUid = (String) request.getAttribute("userUid");

String url = "jdbc:mysql://192.168.0.71:3306/recycle";
String user = "recycle";
String password = "1234";

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"ko\">\n");
      out.write("\n");
      out.write("<head>\n");
      out.write("<title>마이페이지 | 마음을 다시 연결하는 결혼 정보 플랫폼 DASH</title>\n");
      out.write("<meta charset=\"UTF-8\" />\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n");
      out.write("<meta name=\"keyworeds\"\n");
      out.write("	content=\"결혼, wedding, 결혼정보업체, DASH, Re:Connect, 듀오, 가연,\" />\n");
      out.write("<meta name=\"description\"\n");
      out.write("	content=\"안녕하세요, 마음을 다시 연결하는 결혼 정보 플랫폼 DASH 입니다.\" />\n");
      out.write("<link rel=\"icon\" href=\"../images/favicon.png\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../CSS/Likestatus.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../CSS/footer_style.css\" />\n");
      out.write("<link rel=\"stylesheet\" href=\"../CSS/reset.css\" />\n");
      out.write("</head>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("	<!-- 마이페이지 헤더 -->\n");
      out.write("	<header class=\"account_header\">\n");
      out.write("		<div class=\"header_btn\">\n");
      out.write("			<div class=\"message_badge\">\n");
      out.write("				<button type=\"button\" class=\"btn_messenger\" onclick=\"\">메신저</button>\n");
      out.write("				<span class=\"push_num\" style=\"display: none\">0</span>\n");
      out.write("			</div>\n");
      out.write("			<div class=\"alarm_badge\">\n");
      out.write("				<button type=\"button\" class=\"btn_alarm\" onclick=\"\">알림</button>\n");
      out.write("				<span class=\"push_num\" style=\"display: none\">0</span>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("\n");
      out.write("		<div class=\"member\">\n");
      out.write("			<button type=\"button\" class=\"btn_member\">\n");
      out.write("				<div class=\"user_photo\">\n");
      out.write("					<figure class=\"user_img\">\n");
      out.write("						<img src=\"../images/Song.jpg\" alt=\"user_img\" />\n");
      out.write("					</figure>\n");
      out.write("				</div>\n");
      out.write("			</button>\n");
      out.write("\n");
      out.write("			<div class=\"layer_member\">\n");
      out.write("				<ul>\n");
      out.write("					<li><img src=\"../images/Song.jpg\" alt=\"user_img\" /><span>송승현</span>\n");
      out.write("						<!-- 유저이미지, 이름 입력 --></li>\n");
      out.write("					<li><a href=\"account.jsp\"><span>개인정보 수정</span>\n");
      out.write("						<iconify-icon icon=\"la:edit-solid\" width=\"30\"></iconify-icon></a></li>\n");
      out.write("					<li><a href=\"../jsp/logout.jsp\"><span>로그아웃</span>\n");
      out.write("						<iconify-icon icon=\"material-symbols:logout\" width=\"25\"></iconify-icon></a>\n");
      out.write("					</li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</header>\n");
      out.write("\n");
      out.write("	<!-- 마이페이지 사이드메뉴 -->\n");
      out.write("	<div class=\"nav\">\n");
      out.write("		<a href=\"../index.jsp\" id=\"logo2\"> <img src=\"../images/logo.svg\"\n");
      out.write("			alt=\"logo\" />\n");
      out.write("		</a>\n");
      out.write("		<ul class=\"gnb\">\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"profil.jsp\" class=\"menu-btn\">마이프로필</a>\n");
      out.write("			</li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"account.jsp\" class=\"menu-btn\">개인정보수정</a>\n");
      out.write("			</li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"authored_content.jsp\"\n");
      out.write("				class=\"menu-btn\">내가 작성한 글</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"Likestatus.jsp\" class=\"menu-btn\">좋아요\n");
      out.write("					현황</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"matching_current.jsp\"\n");
      out.write("				class=\"menu-btn\">매칭현황</a></li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"member_ship.jsp\" class=\"menu-btn\">멤버십</a>\n");
      out.write("			</li>\n");
      out.write("			<li class=\"gnb-menu\"><a href=\"account_withdrawal.jsp\"\n");
      out.write("				class=\"menu-btn secession\">회원탈퇴</a></li>\n");
      out.write("		</ul>\n");
      out.write("		<button type=\"button\" class=\"nav-icon\">\n");
      out.write("			<iconify-icon icon=\"ph:list-fill\"></iconify-icon>\n");
      out.write("		</button>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("	<main>\n");
      out.write("		<div class=\"container\">\n");
      out.write("			<div class=\"content\">\n");
      out.write("				<div>\n");
      out.write("					<h1 class=\"title\">좋아요 리스트</h1>\n");
      out.write("					<h4 class=\"sub-title\">내가 받은 좋아요 List</h4>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				");

				try {
					Class.forName("com.mysql.cj.jdbc.Driver");
					Connection conn = DriverManager.getConnection(url, user, password);

					String likeFromQuery = "SELECT * FROM `like` WHERE to_user=?;";
					PreparedStatement preparedStatement = conn.prepareStatement(likeFromQuery);
					preparedStatement.setString(1, userUid);
					ResultSet resultSet = preparedStatement.executeQuery();

					SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

					while (resultSet.next()) {
						String fromUserUid = resultSet.getString("from_user");

						// Additional query to get the user details based on user_uid
						String userDetailsQuery = "SELECT * FROM user_list WHERE user_uid=?";
						PreparedStatement userDetailsStatement = conn.prepareStatement(userDetailsQuery);
						userDetailsStatement.setString(1, fromUserUid);
						ResultSet userDetailsResult = userDetailsStatement.executeQuery();

						if (userDetailsResult.next()) {
					String toUserName = userDetailsResult.getString("user_name");
					String toUserUid = userDetailsResult.getString("user_uid");
					String toUserIntroduce = userDetailsResult.getString("user_introduce");
					String photo_url = userDetailsResult.getString("photo_url");
					String imageName = (photo_url != null) ? new File(photo_url).getName() : "Default_image.JPG";
				
      out.write("\n");
      out.write("				<form action=\"../jsp/likeSubmit.jsp\" method=\"post\">\n");
      out.write("					<div class=\"like_member_list\">\n");
      out.write("						<div class=\"heart-container\" title=\"Like\">\n");
      out.write("							<input type=\"checkbox\" class=\"checkbox\" id=\"Give-It-An-Id\" name=\"toUid\"\n");
      out.write("								value=\"");
      out.print(toUserUid);
      out.write("\" checked>\n");
      out.write("							<div class=\"svg-container\">\n");
      out.write("								<svg viewBox=\"0 0 24 24\" class=\"svg-outline\"\n");
      out.write("									xmlns=\"http://www.w3.org/2000/svg\">\n");
      out.write("                <path\n");
      out.write("										d=\"M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Zm-3.585,18.4a2.973,2.973,0,0,1-3.83,0C4.947,16.006,2,11.87,2,8.967a4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,11,8.967a1,1,0,0,0,2,0,4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,22,8.967C22,11.87,19.053,16.006,13.915,20.313Z\">\n");
      out.write("                </path>\n");
      out.write("              </svg>\n");
      out.write("								<svg viewBox=\"0 0 24 24\" class=\"svg-filled\"\n");
      out.write("									xmlns=\"http://www.w3.org/2000/svg\">\n");
      out.write("                <path\n");
      out.write("										d=\"M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Z\">\n");
      out.write("                </path>\n");
      out.write("              </svg>\n");
      out.write("								<svg class=\"svg-celebrate\" width=\"100\" height=\"100\"\n");
      out.write("									xmlns=\"http://www.w3.org/2000/svg\">\n");
      out.write("                <polygon points=\"10,10 20,20\"></polygon>\n");
      out.write("                <polygon points=\"10,50 20,50\"></polygon>\n");
      out.write("                <polygon points=\"20,80 30,70\"></polygon>\n");
      out.write("                <polygon points=\"90,10 80,20\"></polygon>\n");
      out.write("                <polygon points=\"90,50 80,50\"></polygon>\n");
      out.write("                <polygon points=\"80,80 70,70\"></polygon>\n");
      out.write("              </svg>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("						<div class=\"ranking-list\">\n");
      out.write("							<img class=\"like_member_img\"\n");
      out.write("								src=\"");
      out.print(request.getContextPath());
      out.write("/images/");
      out.print(imageName);
      out.write("\"\n");
      out.write("								alt=\"");
      out.print(toUserName);
      out.write("\" width=\"100px\" height=\"100px\">\n");
      out.write("							<div class=\"ranking\">\n");
      out.write("								<p>");
      out.print(toUserName);
      out.write("</p>\n");
      out.write("								<p>");
      out.print(toUserIntroduce);
      out.write("</p>\n");
      out.write("							</div>\n");
      out.write("							<div class=\"buttonBox\">\n");
      out.write("							<button class=\"likeSubmit\" type=\"submit\">\n");
      out.write("								좋아요<br /> 보내기\n");
      out.write("							</button>\n");
      out.write("							<button class=\"button\" onclick=\"confirmBtn()\">\n");
      out.write("								<svg viewBox=\"0 0 448 512\" class=\"svgIcon\">\n");
      out.write("									<path d=\"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"></path>\n");
      out.write("								</svg>\n");
      out.write("							</button>\n");
      out.write("							</div>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("				</form>\n");
      out.write("				");

				}

				// Close the result set and statement for user details query
				userDetailsResult.close();
				userDetailsStatement.close();
				}

				// Close resources for the main query
				resultSet.close();
				preparedStatement.close();
				conn.close();
				} catch (Exception e) {
				out.println("Error: " + e.getMessage());
				}
				
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("				<div>\n");
      out.write("					<h4 class=\"sub-title fromLiek\">내가 누른 좋아요 List</h4>\n");
      out.write("				</div>\n");
      out.write("\n");
      out.write("				");

				try {
					Class.forName("com.mysql.cj.jdbc.Driver");
					Connection conn = DriverManager.getConnection(url, user, password);

					String likeFromQuery = "SELECT * FROM `like` WHERE from_user=?;";
					PreparedStatement preparedStatement = conn.prepareStatement(likeFromQuery);
					preparedStatement.setString(1, userUid);
					ResultSet resultSet = preparedStatement.executeQuery();

					SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");

					while (resultSet.next()) {
						String toUserUid = resultSet.getString("to_user");

						// Additional query to get the user details based on user_uid
						String userDetailsQuery = "SELECT * FROM user_list WHERE user_uid=?";
						PreparedStatement userDetailsStatement = conn.prepareStatement(userDetailsQuery);
						userDetailsStatement.setString(1, toUserUid);
						ResultSet userDetailsResult = userDetailsStatement.executeQuery();

						if (userDetailsResult.next()) {
					String toUserName = userDetailsResult.getString("user_name");
					String toUserIntroduce = userDetailsResult.getString("user_introduce");
					String photo_url = userDetailsResult.getString("photo_url");
					String imageName = (photo_url != null) ? new File(photo_url).getName() : "Default_image.JPG";
				
      out.write("\n");
      out.write("				<div class=\"like_member_list\">\n");
      out.write("					<div class=\"heart-container\" title=\"Like\">\n");
      out.write("						<input type=\"checkbox\" class=\"checkbox\" id=\"Give-It-An-Id\" checked\n");
      out.write("							disabled>\n");
      out.write("						<div class=\"svg-container\">\n");
      out.write("							<svg viewBox=\"0 0 24 24\" class=\"svg-outline\"\n");
      out.write("								xmlns=\"http://www.w3.org/2000/svg\">\n");
      out.write("                <path\n");
      out.write("									d=\"M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Zm-3.585,18.4a2.973,2.973,0,0,1-3.83,0C4.947,16.006,2,11.87,2,8.967a4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,11,8.967a1,1,0,0,0,2,0,4.8,4.8,0,0,1,4.5-5.05A4.8,4.8,0,0,1,22,8.967C22,11.87,19.053,16.006,13.915,20.313Z\">\n");
      out.write("                </path>\n");
      out.write("              </svg>\n");
      out.write("							<svg viewBox=\"0 0 24 24\" class=\"svg-filled\"\n");
      out.write("								xmlns=\"http://www.w3.org/2000/svg\">\n");
      out.write("                <path\n");
      out.write("									d=\"M17.5,1.917a6.4,6.4,0,0,0-5.5,3.3,6.4,6.4,0,0,0-5.5-3.3A6.8,6.8,0,0,0,0,8.967c0,4.547,4.786,9.513,8.8,12.88a4.974,4.974,0,0,0,6.4,0C19.214,18.48,24,13.514,24,8.967A6.8,6.8,0,0,0,17.5,1.917Z\">\n");
      out.write("                </path>\n");
      out.write("              </svg>\n");
      out.write("							<svg class=\"svg-celebrate\" width=\"100\" height=\"100\"\n");
      out.write("								xmlns=\"http://www.w3.org/2000/svg\">\n");
      out.write("                <polygon points=\"10,10 20,20\"></polygon>\n");
      out.write("                <polygon points=\"10,50 20,50\"></polygon>\n");
      out.write("                <polygon points=\"20,80 30,70\"></polygon>\n");
      out.write("                <polygon points=\"90,10 80,20\"></polygon>\n");
      out.write("                <polygon points=\"90,50 80,50\"></polygon>\n");
      out.write("                <polygon points=\"80,80 70,70\"></polygon>\n");
      out.write("              </svg>\n");
      out.write("						</div>\n");
      out.write("					</div>\n");
      out.write("					<div class=\"ranking-list\">\n");
      out.write("						<img class=\"like_member_img\"\n");
      out.write("							src=\"");
      out.print(request.getContextPath());
      out.write("/images/");
      out.print(imageName);
      out.write("\"\n");
      out.write("							alt=\"");
      out.print(toUserName);
      out.write("\" width=\"100px\" height=\"100px\">\n");
      out.write("						<div class=\"ranking\">\n");
      out.write("							<p>");
      out.print(toUserName);
      out.write("</p>\n");
      out.write("							<p>");
      out.print(toUserIntroduce);
      out.write("</p>\n");
      out.write("						</div>\n");
      out.write("						<button class=\"button\" onclick=\"confirmBtn()\">\n");
      out.write("							<svg viewBox=\"0 0 448 512\" class=\"svgIcon\">\n");
      out.write("								<path\n");
      out.write("									d=\"M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z\"></path></svg>\n");
      out.write("						</button>\n");
      out.write("					</div>\n");
      out.write("				</div>\n");
      out.write("				");

				}

				// Close the result set and statement for user details query
				userDetailsResult.close();
				userDetailsStatement.close();
				}

				// Close resources for the main query
				resultSet.close();
				preparedStatement.close();
				conn.close();
				} catch (Exception e) {
				out.println("Error: " + e.getMessage());
				}
				
      out.write("\n");
      out.write("\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</main>\n");
      out.write("\n");
      out.write("	<!-- 아래 footer 하단 고정 -->\n");
      out.write("	<footer class=\"footer\">\n");
      out.write("		<div class=\"footer-content\">\n");
      out.write("			<h3>(주)Re:connect</h3>\n");
      out.write("			<span>대표 : Recycle</span> <span>사업자등록번호 : 999-99-99999</span> <span>주소\n");
      out.write("				: (34838)대전광역시 중구 중앙로121번길 20 (선화동 41) 2층</span> <span>Tel.042-222-2402</span>\n");
      out.write("			<ul class=\"footer-socials\">\n");
      out.write("				<li><a href=\"index_logout.jsp\"><img\n");
      out.write("						src=\"../images/ico_image.svg\" alt=\"ico_image\" /></a> <!-- 임시로 로그아웃 넣어 놨음 -->\n");
      out.write("				</li>\n");
      out.write("				<li><a href=\"account_manager.jsp\"><img\n");
      out.write("						src=\"../images/ico_instagram.svg\" alt=\"ico_instagram\" /></a> <!-- 임시로 커플매니저페이지 넣어 놨음 -->\n");
      out.write("				</li>\n");
      out.write("				<li><a href=\"admin_manager_management.jsp\"><img\n");
      out.write("						src=\"../images/ico_youtube.svg\" alt=\"ico_youtube\" /></a> <!-- 임시로 관리자페이지 넣어 놨음 -->\n");
      out.write("				</li>\n");
      out.write("			</ul>\n");
      out.write("			<div class=\"footer-menu\">\n");
      out.write("				<p>\n");
      out.write("					copyright &copy;2023 by <a href=\"../index.jsp\">Re:connect.</a> All\n");
      out.write("					pictures cannot be copied without permission.\n");
      out.write("				</p>\n");
      out.write("				<ul class=\"f-menu\">\n");
      out.write("					<li><a href=\"../index.jsp\">Home</a></li>\n");
      out.write("					<li><a href=\"dash.jsp\">About</a></li>\n");
      out.write("					<li><a href=\"estimate.jsp\">Contact</a></li>\n");
      out.write("					<li><a href=\"FAQ.jsp\">FAQ</a></li>\n");
      out.write("				</ul>\n");
      out.write("			</div>\n");
      out.write("		</div>\n");
      out.write("	</footer>\n");
      out.write("	<script>\n");
      out.write("	document.addEventListener('DOMContentLoaded', function() {\n");
      out.write("		var form = document.querySelector('form');\n");
      out.write("		var checkbox = document.querySelector('.checkbox');\n");
      out.write("\n");
      out.write("		form.addEventListener('submit', function(event) {\n");
      out.write("			if (!checkbox.checked) {\n");
      out.write("				event.preventDefault(); // Prevent the form from submitting\n");
      out.write("				alert('하트를 눌러주세요');\n");
      out.write("			}\n");
      out.write("		});\n");
      out.write("	});\n");
      out.write("	</script>\n");
      out.write("	<script src=\"../script/Likestatus.js\"></script>\n");
      out.write("	<script\n");
      out.write("		src=\"https://code.iconify.design/iconify-icon/1.0.7/iconify-icon.min.js\"></script>\n");
      out.write("</body>\n");
      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
